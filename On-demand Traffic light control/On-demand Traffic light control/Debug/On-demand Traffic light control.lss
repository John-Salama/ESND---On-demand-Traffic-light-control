
On-demand Traffic light control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b88  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000bfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000bfc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bfc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001445  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000872  00000000  00000000  000021bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000abc  00000000  00000000  00002a2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  000034ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000553  00000000  00000000  000036b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006c5  00000000  00000000  00003c03  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  000042c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 cc 01 	jmp	0x398	; 0x398 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <main>
  74:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <APP_init>:
 *  Author: john
 */ 
#include "Application.h"
uint8_t car;
void APP_init(void){
		car=1;
  7c:	81 e0       	ldi	r24, 0x01	; 1
  7e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		LED_init(LED_CAR_PORT,LED_CAR_GREEN_PIN);
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	81 e4       	ldi	r24, 0x41	; 65
  86:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		LED_init(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	81 e4       	ldi	r24, 0x41	; 65
  8e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		LED_init(LED_CAR_PORT,LED_CAR_RED_PIN);
  92:	62 e0       	ldi	r22, 0x02	; 2
  94:	81 e4       	ldi	r24, 0x41	; 65
  96:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		
		//Pedestrian LED initialization
		LED_init(LED_PED_PORT,LED_PED_RED_PIN);
  9a:	62 e0       	ldi	r22, 0x02	; 2
  9c:	82 e4       	ldi	r24, 0x42	; 66
  9e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		LED_init(LED_PED_PORT,LED_PED_YELLOW_PIN);
  a2:	61 e0       	ldi	r22, 0x01	; 1
  a4:	82 e4       	ldi	r24, 0x42	; 66
  a6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		LED_init(LED_PED_PORT,LED_PED_GREEN_PIN);
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	82 e4       	ldi	r24, 0x42	; 66
  ae:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_init>
		
		//Button initialization
		BUTTON_init(BUTTON_PORT,BUTTON_PIN);
  b2:	62 e0       	ldi	r22, 0x02	; 2
  b4:	84 e4       	ldi	r24, 0x44	; 68
  b6:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <BUTTON_init>
		
		//Timer initialization
		Timer0_init_N();
  ba:	0e 94 1b 03 	call	0x636	; 0x636 <Timer0_init_N>
		
		//Enable Global interrupts & setup rising edge detection for button
		sei();
  be:	78 94       	sei
		RISING_EDGE_SETUP();
  c0:	85 b7       	in	r24, 0x35	; 53
  c2:	83 60       	ori	r24, 0x03	; 3
  c4:	85 bf       	out	0x35, r24	; 53
		SETUP_INT0();
  c6:	8b b7       	in	r24, 0x3b	; 59
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	8b bf       	out	0x3b, r24	; 59
  cc:	08 95       	ret

000000ce <APP_start>:
}

void APP_start(void){
  ce:	cf 93       	push	r28
  d0:	df 93       	push	r29
	
	for(int i =0;i<10;i++){
  d2:	c0 e0       	ldi	r28, 0x00	; 0
  d4:	d0 e0       	ldi	r29, 0x00	; 0
  d6:	34 c0       	rjmp	.+104    	; 0x140 <APP_start+0x72>
	LED_on(LED_PED_PORT,LED_PED_RED_PIN);
  d8:	62 e0       	ldi	r22, 0x02	; 2
  da:	82 e4       	ldi	r24, 0x42	; 66
  dc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
	if(car){
  e0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  e4:	88 23       	and	r24, r24
  e6:	91 f0       	breq	.+36     	; 0x10c <APP_start+0x3e>
	LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	81 e4       	ldi	r24, 0x41	; 65
  ec:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
	LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
  f0:	61 e0       	ldi	r22, 0x01	; 1
  f2:	81 e4       	ldi	r24, 0x41	; 65
  f4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
	LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
  f8:	62 e0       	ldi	r22, 0x02	; 2
  fa:	81 e4       	ldi	r24, 0x41	; 65
  fc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
	Timer0_N_delay_ms(500);
 100:	84 ef       	ldi	r24, 0xF4	; 244
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
		SETUP_INT0();
}

void APP_start(void){
	
	for(int i =0;i<10;i++){
 108:	21 96       	adiw	r28, 0x01	; 1
 10a:	1a c0       	rjmp	.+52     	; 0x140 <APP_start+0x72>
	LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
	LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
	Timer0_N_delay_ms(500);
	}
	else{
		LED_off(LED_PED_PORT,LED_PED_RED_PIN);
 10c:	62 e0       	ldi	r22, 0x02	; 2
 10e:	82 e4       	ldi	r24, 0x42	; 66
 110:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
 114:	62 e0       	ldi	r22, 0x02	; 2
 116:	81 e4       	ldi	r24, 0x41	; 65
 118:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_on(LED_PED_PORT,LED_PED_GREEN_PIN);
 11c:	60 e0       	ldi	r22, 0x00	; 0
 11e:	82 e4       	ldi	r24, 0x42	; 66
 120:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		Timer0_N_delay_ms(5000);
 124:	88 e8       	ldi	r24, 0x88	; 136
 126:	93 e1       	ldi	r25, 0x13	; 19
 128:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
		LED_off(LED_PED_PORT,LED_PED_GREEN_PIN);
 12c:	60 e0       	ldi	r22, 0x00	; 0
 12e:	82 e4       	ldi	r24, 0x42	; 66
 130:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		car=1;
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	else{
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 13a:	c0 e0       	ldi	r28, 0x00	; 0
 13c:	d0 e0       	ldi	r29, 0x00	; 0
 13e:	5f c0       	rjmp	.+190    	; 0x1fe <APP_start+0x130>
		SETUP_INT0();
}

void APP_start(void){
	
	for(int i =0;i<10;i++){
 140:	ca 30       	cpi	r28, 0x0A	; 10
 142:	d1 05       	cpc	r29, r1
 144:	4c f2       	brlt	.-110    	; 0xd8 <APP_start+0xa>
 146:	f9 cf       	rjmp	.-14     	; 0x13a <APP_start+0x6c>

	
	//wait

	for(int i =0;i<10;i++){
	LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 148:	62 e0       	ldi	r22, 0x02	; 2
 14a:	82 e4       	ldi	r24, 0x42	; 66
 14c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		if(car){
 150:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 154:	88 23       	and	r24, r24
 156:	51 f0       	breq	.+20     	; 0x16c <APP_start+0x9e>
	LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 158:	61 e0       	ldi	r22, 0x01	; 1
 15a:	81 e4       	ldi	r24, 0x41	; 65
 15c:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
	Timer0_N_delay_ms(500);
 160:	84 ef       	ldi	r24, 0xF4	; 244
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
}

	
	//wait

	for(int i =0;i<10;i++){
 168:	21 96       	adiw	r28, 0x01	; 1
 16a:	49 c0       	rjmp	.+146    	; 0x1fe <APP_start+0x130>
		if(car){
	LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
	Timer0_N_delay_ms(500);
	}
	else{
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
 16c:	62 e0       	ldi	r22, 0x02	; 2
 16e:	81 e4       	ldi	r24, 0x41	; 65
 170:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 174:	62 e0       	ldi	r22, 0x02	; 2
 176:	82 e4       	ldi	r24, 0x42	; 66
 178:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	81 e4       	ldi	r24, 0x41	; 65
 180:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 184:	61 e0       	ldi	r22, 0x01	; 1
 186:	82 e4       	ldi	r24, 0x42	; 66
 188:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		for(int i =0;i<10;i++){
 18c:	c0 e0       	ldi	r28, 0x00	; 0
 18e:	d0 e0       	ldi	r29, 0x00	; 0
 190:	0d c0       	rjmp	.+26     	; 0x1ac <APP_start+0xde>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 192:	61 e0       	ldi	r22, 0x01	; 1
 194:	81 e4       	ldi	r24, 0x41	; 65
 196:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
 19a:	61 e0       	ldi	r22, 0x01	; 1
 19c:	82 e4       	ldi	r24, 0x42	; 66
 19e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			Timer0_N_delay_ms(500);
 1a2:	84 ef       	ldi	r24, 0xF4	; 244
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
	else{
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 1aa:	21 96       	adiw	r28, 0x01	; 1
 1ac:	ca 30       	cpi	r28, 0x0A	; 10
 1ae:	d1 05       	cpc	r29, r1
 1b0:	84 f3       	brlt	.-32     	; 0x192 <APP_start+0xc4>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
			Timer0_N_delay_ms(500);
			}
			LED_off(LED_PED_PORT,LED_PED_RED_PIN);
 1b2:	62 e0       	ldi	r22, 0x02	; 2
 1b4:	82 e4       	ldi	r24, 0x42	; 66
 1b6:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
			LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 1ba:	61 e0       	ldi	r22, 0x01	; 1
 1bc:	81 e4       	ldi	r24, 0x41	; 65
 1be:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
			LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 1c2:	61 e0       	ldi	r22, 0x01	; 1
 1c4:	82 e4       	ldi	r24, 0x42	; 66
 1c6:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
			LED_on(LED_PED_PORT,LED_PED_GREEN_PIN);
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	82 e4       	ldi	r24, 0x42	; 66
 1ce:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
			LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
 1d2:	62 e0       	ldi	r22, 0x02	; 2
 1d4:	81 e4       	ldi	r24, 0x41	; 65
 1d6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
			Timer0_N_delay_ms(5000);
 1da:	88 e8       	ldi	r24, 0x88	; 136
 1dc:	93 e1       	ldi	r25, 0x13	; 19
 1de:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
			LED_off(LED_PED_PORT,LED_PED_GREEN_PIN);
 1e2:	60 e0       	ldi	r22, 0x00	; 0
 1e4:	82 e4       	ldi	r24, 0x42	; 66
 1e6:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
			LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
 1ea:	62 e0       	ldi	r22, 0x02	; 2
 1ec:	81 e4       	ldi	r24, 0x41	; 65
 1ee:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
			car=1;
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	else{
		//LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 1f8:	c0 e0       	ldi	r28, 0x00	; 0
 1fa:	d0 e0       	ldi	r29, 0x00	; 0
 1fc:	68 c0       	rjmp	.+208    	; 0x2ce <APP_start+0x200>
}

	
	//wait

	for(int i =0;i<10;i++){
 1fe:	ca 30       	cpi	r28, 0x0A	; 10
 200:	d1 05       	cpc	r29, r1
 202:	0c f4       	brge	.+2      	; 0x206 <APP_start+0x138>
 204:	a1 cf       	rjmp	.-190    	; 0x148 <APP_start+0x7a>
 206:	f8 cf       	rjmp	.-16     	; 0x1f8 <APP_start+0x12a>
	}
}
	
	//green
	for(int i =0;i<10;i++){
	LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 208:	62 e0       	ldi	r22, 0x02	; 2
 20a:	82 e4       	ldi	r24, 0x42	; 66
 20c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		if(car){
 210:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 214:	88 23       	and	r24, r24
 216:	91 f0       	breq	.+36     	; 0x23c <APP_start+0x16e>
	LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
 218:	62 e0       	ldi	r22, 0x02	; 2
 21a:	81 e4       	ldi	r24, 0x41	; 65
 21c:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
	LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 220:	61 e0       	ldi	r22, 0x01	; 1
 222:	81 e4       	ldi	r24, 0x41	; 65
 224:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
	LED_on(LED_CAR_PORT,LED_CAR_GREEN_PIN);
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	81 e4       	ldi	r24, 0x41	; 65
 22c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
	Timer0_N_delay_ms(500);
 230:	84 ef       	ldi	r24, 0xF4	; 244
 232:	91 e0       	ldi	r25, 0x01	; 1
 234:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
			break;
	}
}
	
	//green
	for(int i =0;i<10;i++){
 238:	21 96       	adiw	r28, 0x01	; 1
 23a:	49 c0       	rjmp	.+146    	; 0x2ce <APP_start+0x200>
	LED_on(LED_CAR_PORT,LED_CAR_GREEN_PIN);
	Timer0_N_delay_ms(500);
	}
	else{
		//LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 23c:	62 e0       	ldi	r22, 0x02	; 2
 23e:	82 e4       	ldi	r24, 0x42	; 66
 240:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 244:	61 e0       	ldi	r22, 0x01	; 1
 246:	81 e4       	ldi	r24, 0x41	; 65
 248:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 24c:	61 e0       	ldi	r22, 0x01	; 1
 24e:	82 e4       	ldi	r24, 0x42	; 66
 250:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		for(int i =0;i<10;i++){
 254:	c0 e0       	ldi	r28, 0x00	; 0
 256:	d0 e0       	ldi	r29, 0x00	; 0
 258:	0d c0       	rjmp	.+26     	; 0x274 <APP_start+0x1a6>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 25a:	61 e0       	ldi	r22, 0x01	; 1
 25c:	81 e4       	ldi	r24, 0x41	; 65
 25e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
 262:	61 e0       	ldi	r22, 0x01	; 1
 264:	82 e4       	ldi	r24, 0x42	; 66
 266:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			Timer0_N_delay_ms(500);
 26a:	84 ef       	ldi	r24, 0xF4	; 244
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
	else{
		//LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 272:	21 96       	adiw	r28, 0x01	; 1
 274:	ca 30       	cpi	r28, 0x0A	; 10
 276:	d1 05       	cpc	r29, r1
 278:	84 f3       	brlt	.-32     	; 0x25a <APP_start+0x18c>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
			Timer0_N_delay_ms(500);
		}
		LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	81 e4       	ldi	r24, 0x41	; 65
 27e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_RED_PIN);
 282:	62 e0       	ldi	r22, 0x02	; 2
 284:	82 e4       	ldi	r24, 0x42	; 66
 286:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 28a:	61 e0       	ldi	r22, 0x01	; 1
 28c:	81 e4       	ldi	r24, 0x41	; 65
 28e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 292:	61 e0       	ldi	r22, 0x01	; 1
 294:	82 e4       	ldi	r24, 0x42	; 66
 296:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_on(LED_PED_PORT,LED_PED_GREEN_PIN);
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	82 e4       	ldi	r24, 0x42	; 66
 29e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
 2a2:	62 e0       	ldi	r22, 0x02	; 2
 2a4:	81 e4       	ldi	r24, 0x41	; 65
 2a6:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		Timer0_N_delay_ms(5000);
 2aa:	88 e8       	ldi	r24, 0x88	; 136
 2ac:	93 e1       	ldi	r25, 0x13	; 19
 2ae:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
		LED_off(LED_PED_PORT,LED_PED_GREEN_PIN);
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	82 e4       	ldi	r24, 0x42	; 66
 2b6:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
 2ba:	62 e0       	ldi	r22, 0x02	; 2
 2bc:	81 e4       	ldi	r24, 0x41	; 65
 2be:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		car=1;
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	else{
		LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 2c8:	c0 e0       	ldi	r28, 0x00	; 0
 2ca:	d0 e0       	ldi	r29, 0x00	; 0
 2cc:	5e c0       	rjmp	.+188    	; 0x38a <APP_start+0x2bc>
			break;
	}
}
	
	//green
	for(int i =0;i<10;i++){
 2ce:	ca 30       	cpi	r28, 0x0A	; 10
 2d0:	d1 05       	cpc	r29, r1
 2d2:	0c f4       	brge	.+2      	; 0x2d6 <APP_start+0x208>
 2d4:	99 cf       	rjmp	.-206    	; 0x208 <APP_start+0x13a>
 2d6:	f8 cf       	rjmp	.-16     	; 0x2c8 <APP_start+0x1fa>
	}
}
	
	//wait
	for(int i =0;i<10;i++){
	LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 2d8:	62 e0       	ldi	r22, 0x02	; 2
 2da:	82 e4       	ldi	r24, 0x42	; 66
 2dc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		if(car){
 2e0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2e4:	88 23       	and	r24, r24
 2e6:	51 f0       	breq	.+20     	; 0x2fc <APP_start+0x22e>
		LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	81 e4       	ldi	r24, 0x41	; 65
 2ec:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
		Timer0_N_delay_ms(500);
 2f0:	84 ef       	ldi	r24, 0xF4	; 244
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
		break;
	}
}
	
	//wait
	for(int i =0;i<10;i++){
 2f8:	21 96       	adiw	r28, 0x01	; 1
 2fa:	47 c0       	rjmp	.+142    	; 0x38a <APP_start+0x2bc>
		if(car){
		LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		Timer0_N_delay_ms(500);
	}
	else{
		LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	81 e4       	ldi	r24, 0x41	; 65
 300:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
 304:	62 e0       	ldi	r22, 0x02	; 2
 306:	82 e4       	ldi	r24, 0x42	; 66
 308:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 30c:	61 e0       	ldi	r22, 0x01	; 1
 30e:	81 e4       	ldi	r24, 0x41	; 65
 310:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 314:	61 e0       	ldi	r22, 0x01	; 1
 316:	82 e4       	ldi	r24, 0x42	; 66
 318:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		for(int i =0;i<10;i++){
 31c:	c0 e0       	ldi	r28, 0x00	; 0
 31e:	d0 e0       	ldi	r29, 0x00	; 0
 320:	0d c0       	rjmp	.+26     	; 0x33c <APP_start+0x26e>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 322:	61 e0       	ldi	r22, 0x01	; 1
 324:	81 e4       	ldi	r24, 0x41	; 65
 326:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
 32a:	61 e0       	ldi	r22, 0x01	; 1
 32c:	82 e4       	ldi	r24, 0x42	; 66
 32e:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <LED_toggle>
			Timer0_N_delay_ms(500);
 332:	84 ef       	ldi	r24, 0xF4	; 244
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
	else{
		LED_off(LED_CAR_PORT,LED_CAR_GREEN_PIN);
		LED_on(LED_PED_PORT,LED_PED_RED_PIN);
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
		for(int i =0;i<10;i++){
 33a:	21 96       	adiw	r28, 0x01	; 1
 33c:	ca 30       	cpi	r28, 0x0A	; 10
 33e:	d1 05       	cpc	r29, r1
 340:	84 f3       	brlt	.-32     	; 0x322 <APP_start+0x254>
			LED_toggle(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
			LED_toggle(LED_PED_PORT,LED_PED_YELLOW_PIN);
			Timer0_N_delay_ms(500);
		}
		LED_off(LED_PED_PORT,LED_PED_RED_PIN);
 342:	62 e0       	ldi	r22, 0x02	; 2
 344:	82 e4       	ldi	r24, 0x42	; 66
 346:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_CAR_PORT,LED_CAR_YELLOW_PIN);
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	81 e4       	ldi	r24, 0x41	; 65
 34e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_PED_PORT,LED_PED_YELLOW_PIN);
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	82 e4       	ldi	r24, 0x42	; 66
 356:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_on(LED_PED_PORT,LED_PED_GREEN_PIN);
 35a:	60 e0       	ldi	r22, 0x00	; 0
 35c:	82 e4       	ldi	r24, 0x42	; 66
 35e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		LED_on(LED_CAR_PORT,LED_CAR_RED_PIN);
 362:	62 e0       	ldi	r22, 0x02	; 2
 364:	81 e4       	ldi	r24, 0x41	; 65
 366:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LED_on>
		Timer0_N_delay_ms(5000);
 36a:	88 e8       	ldi	r24, 0x88	; 136
 36c:	93 e1       	ldi	r25, 0x13	; 19
 36e:	0e 94 1e 03 	call	0x63c	; 0x63c <Timer0_N_delay_ms>
		LED_off(LED_PED_PORT,LED_PED_GREEN_PIN);
 372:	60 e0       	ldi	r22, 0x00	; 0
 374:	82 e4       	ldi	r24, 0x42	; 66
 376:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	81 e4       	ldi	r24, 0x41	; 65
 37e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <LED_off>
		car=1;
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		break;
 388:	04 c0       	rjmp	.+8      	; 0x392 <APP_start+0x2c4>
		break;
	}
}
	
	//wait
	for(int i =0;i<10;i++){
 38a:	ca 30       	cpi	r28, 0x0A	; 10
 38c:	d1 05       	cpc	r29, r1
 38e:	0c f4       	brge	.+2      	; 0x392 <APP_start+0x2c4>
 390:	a3 cf       	rjmp	.-186    	; 0x2d8 <APP_start+0x20a>
		LED_off(LED_CAR_PORT,LED_CAR_RED_PIN);
		car=1;
		break;
	}
}
}
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <__vector_1>:

 398:	1f 92       	push	r1
 39a:	0f 92       	push	r0
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	0f 92       	push	r0
 3a0:	11 24       	eor	r1, r1
 3a2:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 3a6:	0f 90       	pop	r0
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	0f 90       	pop	r0
 3ac:	1f 90       	pop	r1
 3ae:	18 95       	reti

000003b0 <BUTTON_init>:
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <DIO_init>
 3b6:	08 95       	ret

000003b8 <LED_init>:
 3b8:	41 e0       	ldi	r20, 0x01	; 1
 3ba:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <DIO_init>
 3be:	08 95       	ret

000003c0 <LED_on>:
 3c0:	41 e0       	ldi	r20, 0x01	; 1
 3c2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <DIO_write>
 3c6:	08 95       	ret

000003c8 <LED_off>:
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <DIO_write>
 3ce:	08 95       	ret

000003d0 <LED_toggle>:
 3d0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <DIO_toggle>
 3d4:	08 95       	ret

000003d6 <main>:
 */ 

#include "Application/Application.h"
int main(void)
{
	APP_init();
 3d6:	0e 94 3e 00 	call	0x7c	; 0x7c <APP_init>
    while (1) 
    {
		APP_start();
 3da:	0e 94 67 00 	call	0xce	; 0xce <APP_start>
 3de:	fd cf       	rjmp	.-6      	; 0x3da <main+0x4>

000003e0 <DIO_init>:
 3e0:	82 34       	cpi	r24, 0x42	; 66
 3e2:	31 f1       	breq	.+76     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 3e4:	18 f4       	brcc	.+6      	; 0x3ec <DIO_init+0xc>
 3e6:	81 34       	cpi	r24, 0x41	; 65
 3e8:	39 f0       	breq	.+14     	; 0x3f8 <DIO_init+0x18>
 3ea:	08 95       	ret
 3ec:	83 34       	cpi	r24, 0x43	; 67
 3ee:	e1 f1       	breq	.+120    	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 3f0:	84 34       	cpi	r24, 0x44	; 68
 3f2:	09 f4       	brne	.+2      	; 0x3f6 <DIO_init+0x16>
 3f4:	54 c0       	rjmp	.+168    	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 3f6:	08 95       	ret
 3f8:	41 11       	cpse	r20, r1
 3fa:	0c c0       	rjmp	.+24     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3fc:	2a b3       	in	r18, 0x1a	; 26
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	6a 95       	dec	r22
 40a:	e2 f7       	brpl	.-8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 40c:	80 95       	com	r24
 40e:	82 23       	and	r24, r18
 410:	8a bb       	out	0x1a, r24	; 26
 412:	08 95       	ret
 414:	41 30       	cpi	r20, 0x01	; 1
 416:	09 f0       	breq	.+2      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 418:	5c c0       	rjmp	.+184    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 41a:	2a b3       	in	r18, 0x1a	; 26
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 c0       	rjmp	.+4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	6a 95       	dec	r22
 428:	e2 f7       	brpl	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	82 2b       	or	r24, r18
 42c:	8a bb       	out	0x1a, r24	; 26
 42e:	08 95       	ret
 430:	41 11       	cpse	r20, r1
 432:	0c c0       	rjmp	.+24     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 434:	27 b3       	in	r18, 0x17	; 23
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 43c:	88 0f       	add	r24, r24
 43e:	99 1f       	adc	r25, r25
 440:	6a 95       	dec	r22
 442:	e2 f7       	brpl	.-8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 444:	80 95       	com	r24
 446:	82 23       	and	r24, r18
 448:	87 bb       	out	0x17, r24	; 23
 44a:	08 95       	ret
 44c:	41 30       	cpi	r20, 0x01	; 1
 44e:	09 f0       	breq	.+2      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
 450:	40 c0       	rjmp	.+128    	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 452:	27 b3       	in	r18, 0x17	; 23
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	6a 95       	dec	r22
 460:	e2 f7       	brpl	.-8      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 462:	82 2b       	or	r24, r18
 464:	87 bb       	out	0x17, r24	; 23
 466:	08 95       	ret
 468:	41 11       	cpse	r20, r1
 46a:	0c c0       	rjmp	.+24     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 46c:	24 b3       	in	r18, 0x14	; 20
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	02 c0       	rjmp	.+4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
 474:	88 0f       	add	r24, r24
 476:	99 1f       	adc	r25, r25
 478:	6a 95       	dec	r22
 47a:	e2 f7       	brpl	.-8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 47c:	80 95       	com	r24
 47e:	82 23       	and	r24, r18
 480:	84 bb       	out	0x14, r24	; 20
 482:	08 95       	ret
 484:	41 30       	cpi	r20, 0x01	; 1
 486:	29 f5       	brne	.+74     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 488:	24 b3       	in	r18, 0x14	; 20
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 490:	88 0f       	add	r24, r24
 492:	99 1f       	adc	r25, r25
 494:	6a 95       	dec	r22
 496:	e2 f7       	brpl	.-8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 498:	82 2b       	or	r24, r18
 49a:	84 bb       	out	0x14, r24	; 20
 49c:	08 95       	ret
 49e:	41 11       	cpse	r20, r1
 4a0:	0c c0       	rjmp	.+24     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4a2:	21 b3       	in	r18, 0x11	; 17
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	6a 95       	dec	r22
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4b2:	80 95       	com	r24
 4b4:	82 23       	and	r24, r18
 4b6:	81 bb       	out	0x11, r24	; 17
 4b8:	08 95       	ret
 4ba:	41 30       	cpi	r20, 0x01	; 1
 4bc:	51 f4       	brne	.+20     	; 0x4d2 <__EEPROM_REGION_LENGTH__+0xd2>
 4be:	21 b3       	in	r18, 0x11	; 17
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	6a 95       	dec	r22
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 4ce:	82 2b       	or	r24, r18
 4d0:	81 bb       	out	0x11, r24	; 17
 4d2:	08 95       	ret

000004d4 <DIO_write>:
 4d4:	82 34       	cpi	r24, 0x42	; 66
 4d6:	31 f1       	breq	.+76     	; 0x524 <DIO_write+0x50>
 4d8:	18 f4       	brcc	.+6      	; 0x4e0 <DIO_write+0xc>
 4da:	81 34       	cpi	r24, 0x41	; 65
 4dc:	39 f0       	breq	.+14     	; 0x4ec <DIO_write+0x18>
 4de:	08 95       	ret
 4e0:	83 34       	cpi	r24, 0x43	; 67
 4e2:	e1 f1       	breq	.+120    	; 0x55c <DIO_write+0x88>
 4e4:	84 34       	cpi	r24, 0x44	; 68
 4e6:	09 f4       	brne	.+2      	; 0x4ea <DIO_write+0x16>
 4e8:	54 c0       	rjmp	.+168    	; 0x592 <DIO_write+0xbe>
 4ea:	08 95       	ret
 4ec:	41 11       	cpse	r20, r1
 4ee:	0c c0       	rjmp	.+24     	; 0x508 <DIO_write+0x34>
 4f0:	2b b3       	in	r18, 0x1b	; 27
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	90 e0       	ldi	r25, 0x00	; 0
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <DIO_write+0x28>
 4f8:	88 0f       	add	r24, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	6a 95       	dec	r22
 4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <DIO_write+0x24>
 500:	80 95       	com	r24
 502:	82 23       	and	r24, r18
 504:	8b bb       	out	0x1b, r24	; 27
 506:	08 95       	ret
 508:	41 30       	cpi	r20, 0x01	; 1
 50a:	09 f0       	breq	.+2      	; 0x50e <DIO_write+0x3a>
 50c:	5c c0       	rjmp	.+184    	; 0x5c6 <DIO_write+0xf2>
 50e:	2b b3       	in	r18, 0x1b	; 27
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <DIO_write+0x46>
 516:	88 0f       	add	r24, r24
 518:	99 1f       	adc	r25, r25
 51a:	6a 95       	dec	r22
 51c:	e2 f7       	brpl	.-8      	; 0x516 <DIO_write+0x42>
 51e:	82 2b       	or	r24, r18
 520:	8b bb       	out	0x1b, r24	; 27
 522:	08 95       	ret
 524:	41 11       	cpse	r20, r1
 526:	0c c0       	rjmp	.+24     	; 0x540 <DIO_write+0x6c>
 528:	28 b3       	in	r18, 0x18	; 24
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_write+0x60>
 530:	88 0f       	add	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	6a 95       	dec	r22
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_write+0x5c>
 538:	80 95       	com	r24
 53a:	82 23       	and	r24, r18
 53c:	88 bb       	out	0x18, r24	; 24
 53e:	08 95       	ret
 540:	41 30       	cpi	r20, 0x01	; 1
 542:	09 f0       	breq	.+2      	; 0x546 <DIO_write+0x72>
 544:	40 c0       	rjmp	.+128    	; 0x5c6 <DIO_write+0xf2>
 546:	28 b3       	in	r18, 0x18	; 24
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	02 c0       	rjmp	.+4      	; 0x552 <DIO_write+0x7e>
 54e:	88 0f       	add	r24, r24
 550:	99 1f       	adc	r25, r25
 552:	6a 95       	dec	r22
 554:	e2 f7       	brpl	.-8      	; 0x54e <DIO_write+0x7a>
 556:	82 2b       	or	r24, r18
 558:	88 bb       	out	0x18, r24	; 24
 55a:	08 95       	ret
 55c:	41 11       	cpse	r20, r1
 55e:	0c c0       	rjmp	.+24     	; 0x578 <DIO_write+0xa4>
 560:	25 b3       	in	r18, 0x15	; 21
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	02 c0       	rjmp	.+4      	; 0x56c <DIO_write+0x98>
 568:	88 0f       	add	r24, r24
 56a:	99 1f       	adc	r25, r25
 56c:	6a 95       	dec	r22
 56e:	e2 f7       	brpl	.-8      	; 0x568 <DIO_write+0x94>
 570:	80 95       	com	r24
 572:	82 23       	and	r24, r18
 574:	85 bb       	out	0x15, r24	; 21
 576:	08 95       	ret
 578:	41 30       	cpi	r20, 0x01	; 1
 57a:	29 f5       	brne	.+74     	; 0x5c6 <DIO_write+0xf2>
 57c:	25 b3       	in	r18, 0x15	; 21
 57e:	81 e0       	ldi	r24, 0x01	; 1
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	02 c0       	rjmp	.+4      	; 0x588 <DIO_write+0xb4>
 584:	88 0f       	add	r24, r24
 586:	99 1f       	adc	r25, r25
 588:	6a 95       	dec	r22
 58a:	e2 f7       	brpl	.-8      	; 0x584 <DIO_write+0xb0>
 58c:	82 2b       	or	r24, r18
 58e:	85 bb       	out	0x15, r24	; 21
 590:	08 95       	ret
 592:	41 11       	cpse	r20, r1
 594:	0c c0       	rjmp	.+24     	; 0x5ae <DIO_write+0xda>
 596:	22 b3       	in	r18, 0x12	; 18
 598:	81 e0       	ldi	r24, 0x01	; 1
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <DIO_write+0xce>
 59e:	88 0f       	add	r24, r24
 5a0:	99 1f       	adc	r25, r25
 5a2:	6a 95       	dec	r22
 5a4:	e2 f7       	brpl	.-8      	; 0x59e <DIO_write+0xca>
 5a6:	80 95       	com	r24
 5a8:	82 23       	and	r24, r18
 5aa:	82 bb       	out	0x12, r24	; 18
 5ac:	08 95       	ret
 5ae:	41 30       	cpi	r20, 0x01	; 1
 5b0:	51 f4       	brne	.+20     	; 0x5c6 <DIO_write+0xf2>
 5b2:	22 b3       	in	r18, 0x12	; 18
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <DIO_write+0xea>
 5ba:	88 0f       	add	r24, r24
 5bc:	99 1f       	adc	r25, r25
 5be:	6a 95       	dec	r22
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <DIO_write+0xe6>
 5c2:	82 2b       	or	r24, r18
 5c4:	82 bb       	out	0x12, r24	; 18
 5c6:	08 95       	ret

000005c8 <DIO_toggle>:
 5c8:	82 34       	cpi	r24, 0x42	; 66
 5ca:	a1 f0       	breq	.+40     	; 0x5f4 <DIO_toggle+0x2c>
 5cc:	18 f4       	brcc	.+6      	; 0x5d4 <DIO_toggle+0xc>
 5ce:	81 34       	cpi	r24, 0x41	; 65
 5d0:	31 f0       	breq	.+12     	; 0x5de <DIO_toggle+0x16>
 5d2:	08 95       	ret
 5d4:	83 34       	cpi	r24, 0x43	; 67
 5d6:	c9 f0       	breq	.+50     	; 0x60a <DIO_toggle+0x42>
 5d8:	84 34       	cpi	r24, 0x44	; 68
 5da:	11 f1       	breq	.+68     	; 0x620 <DIO_toggle+0x58>
 5dc:	08 95       	ret
 5de:	2b b3       	in	r18, 0x1b	; 27
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_toggle+0x22>
 5e6:	88 0f       	add	r24, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	6a 95       	dec	r22
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_toggle+0x1e>
 5ee:	82 27       	eor	r24, r18
 5f0:	8b bb       	out	0x1b, r24	; 27
 5f2:	08 95       	ret
 5f4:	28 b3       	in	r18, 0x18	; 24
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_toggle+0x38>
 5fc:	88 0f       	add	r24, r24
 5fe:	99 1f       	adc	r25, r25
 600:	6a 95       	dec	r22
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_toggle+0x34>
 604:	82 27       	eor	r24, r18
 606:	88 bb       	out	0x18, r24	; 24
 608:	08 95       	ret
 60a:	25 b3       	in	r18, 0x15	; 21
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <DIO_toggle+0x4e>
 612:	88 0f       	add	r24, r24
 614:	99 1f       	adc	r25, r25
 616:	6a 95       	dec	r22
 618:	e2 f7       	brpl	.-8      	; 0x612 <DIO_toggle+0x4a>
 61a:	82 27       	eor	r24, r18
 61c:	85 bb       	out	0x15, r24	; 21
 61e:	08 95       	ret
 620:	22 b3       	in	r18, 0x12	; 18
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	02 c0       	rjmp	.+4      	; 0x62c <DIO_toggle+0x64>
 628:	88 0f       	add	r24, r24
 62a:	99 1f       	adc	r25, r25
 62c:	6a 95       	dec	r22
 62e:	e2 f7       	brpl	.-8      	; 0x628 <DIO_toggle+0x60>
 630:	82 27       	eor	r24, r18
 632:	82 bb       	out	0x12, r24	; 18
 634:	08 95       	ret

00000636 <Timer0_init_N>:
 *  Author: john
 */ 
#include "timer.h"

void Timer0_init_N(){
	TCCR0 = 0x00; //Normal mode
 636:	13 be       	out	0x33, r1	; 51
	TCNT0 = 0x00;
 638:	12 be       	out	0x32, r1	; 50
 63a:	08 95       	ret

0000063c <Timer0_N_delay_ms>:
}
void Timer0_N_delay_ms(uint16_t delay_ms){
 63c:	8f 92       	push	r8
 63e:	9f 92       	push	r9
 640:	af 92       	push	r10
 642:	bf 92       	push	r11
 644:	cf 92       	push	r12
 646:	df 92       	push	r13
 648:	ef 92       	push	r14
 64a:	ff 92       	push	r15
 64c:	cf 93       	push	r28
 64e:	df 93       	push	r29
	double Ttick, TmaxDelay;
	uint16_t Noverflows,TInitial; 
	uint32_t overFlowcnt=0;
	Ttick = 256.0/1000.0;
	TmaxDelay = Ttick*pow(2,8);
	if(delay_ms < TmaxDelay){
 650:	bc 01       	movw	r22, r24
 652:	80 e0       	ldi	r24, 0x00	; 0
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 cf 04 	call	0x99e	; 0x99e <__floatunsisf>
 65a:	6b 01       	movw	r12, r22
 65c:	7c 01       	movw	r14, r24
 65e:	2f e6       	ldi	r18, 0x6F	; 111
 660:	32 e1       	ldi	r19, 0x12	; 18
 662:	43 e8       	ldi	r20, 0x83	; 131
 664:	52 e4       	ldi	r21, 0x42	; 66
 666:	0e 94 29 04 	call	0x852	; 0x852 <__cmpsf2>
 66a:	88 23       	and	r24, r24
 66c:	9c f4       	brge	.+38     	; 0x694 <Timer0_N_delay_ms+0x58>
		TInitial = (TmaxDelay-delay_ms)/Ttick;
 66e:	a7 01       	movw	r20, r14
 670:	96 01       	movw	r18, r12
 672:	6f e6       	ldi	r22, 0x6F	; 111
 674:	72 e1       	ldi	r23, 0x12	; 18
 676:	83 e8       	ldi	r24, 0x83	; 131
 678:	92 e4       	ldi	r25, 0x42	; 66
 67a:	0e 94 a5 03 	call	0x74a	; 0x74a <__subsf3>
 67e:	2f e6       	ldi	r18, 0x6F	; 111
 680:	32 e1       	ldi	r19, 0x12	; 18
 682:	43 e8       	ldi	r20, 0x83	; 131
 684:	5e e3       	ldi	r21, 0x3E	; 62
 686:	0e 94 2e 04 	call	0x85c	; 0x85c <__divsf3>
 68a:	0e 94 a0 04 	call	0x940	; 0x940 <__fixunssfsi>
		Noverflows = 1;
 68e:	c1 e0       	ldi	r28, 0x01	; 1
 690:	d0 e0       	ldi	r29, 0x00	; 0
 692:	3c c0       	rjmp	.+120    	; 0x70c <Timer0_N_delay_ms+0xd0>
	}else if(delay_ms == TmaxDelay){
 694:	2f e6       	ldi	r18, 0x6F	; 111
 696:	32 e1       	ldi	r19, 0x12	; 18
 698:	43 e8       	ldi	r20, 0x83	; 131
 69a:	52 e4       	ldi	r21, 0x42	; 66
 69c:	c7 01       	movw	r24, r14
 69e:	b6 01       	movw	r22, r12
 6a0:	0e 94 29 04 	call	0x852	; 0x852 <__cmpsf2>
 6a4:	88 23       	and	r24, r24
 6a6:	79 f1       	breq	.+94     	; 0x706 <Timer0_N_delay_ms+0xca>
		TInitial = 0;
		Noverflows = 1;
	}else{
		Noverflows = ceil(delay_ms/TmaxDelay);
 6a8:	2f e6       	ldi	r18, 0x6F	; 111
 6aa:	32 e1       	ldi	r19, 0x12	; 18
 6ac:	43 e8       	ldi	r20, 0x83	; 131
 6ae:	52 e4       	ldi	r21, 0x42	; 66
 6b0:	c7 01       	movw	r24, r14
 6b2:	b6 01       	movw	r22, r12
 6b4:	0e 94 2e 04 	call	0x85c	; 0x85c <__divsf3>
 6b8:	0e 94 12 04 	call	0x824	; 0x824 <ceil>
 6bc:	0e 94 a0 04 	call	0x940	; 0x940 <__fixunssfsi>
 6c0:	4b 01       	movw	r8, r22
 6c2:	5c 01       	movw	r10, r24
 6c4:	eb 01       	movw	r28, r22
		TInitial = 256.0 - ((delay_ms/Ttick)/Noverflows);
 6c6:	2f e6       	ldi	r18, 0x6F	; 111
 6c8:	32 e1       	ldi	r19, 0x12	; 18
 6ca:	43 e8       	ldi	r20, 0x83	; 131
 6cc:	5e e3       	ldi	r21, 0x3E	; 62
 6ce:	c7 01       	movw	r24, r14
 6d0:	b6 01       	movw	r22, r12
 6d2:	0e 94 2e 04 	call	0x85c	; 0x85c <__divsf3>
 6d6:	6b 01       	movw	r12, r22
 6d8:	7c 01       	movw	r14, r24
 6da:	b4 01       	movw	r22, r8
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	0e 94 cf 04 	call	0x99e	; 0x99e <__floatunsisf>
 6e4:	9b 01       	movw	r18, r22
 6e6:	ac 01       	movw	r20, r24
 6e8:	c7 01       	movw	r24, r14
 6ea:	b6 01       	movw	r22, r12
 6ec:	0e 94 2e 04 	call	0x85c	; 0x85c <__divsf3>
 6f0:	9b 01       	movw	r18, r22
 6f2:	ac 01       	movw	r20, r24
 6f4:	60 e0       	ldi	r22, 0x00	; 0
 6f6:	70 e0       	ldi	r23, 0x00	; 0
 6f8:	80 e8       	ldi	r24, 0x80	; 128
 6fa:	93 e4       	ldi	r25, 0x43	; 67
 6fc:	0e 94 a5 03 	call	0x74a	; 0x74a <__subsf3>
 700:	0e 94 a0 04 	call	0x940	; 0x940 <__fixunssfsi>
 704:	03 c0       	rjmp	.+6      	; 0x70c <Timer0_N_delay_ms+0xd0>
	TmaxDelay = Ttick*pow(2,8);
	if(delay_ms < TmaxDelay){
		TInitial = (TmaxDelay-delay_ms)/Ttick;
		Noverflows = 1;
	}else if(delay_ms == TmaxDelay){
		TInitial = 0;
 706:	60 e0       	ldi	r22, 0x00	; 0
		Noverflows = 1;
 708:	c1 e0       	ldi	r28, 0x01	; 1
 70a:	d0 e0       	ldi	r29, 0x00	; 0
	}else{
		Noverflows = ceil(delay_ms/TmaxDelay);
		TInitial = 256.0 - ((delay_ms/Ttick)/Noverflows);
	}
	TCNT0 = TInitial;
 70c:	62 bf       	out	0x32, r22	; 50
		TCCR0 |= (1<<2); //set 256 p_rescaling
 70e:	83 b7       	in	r24, 0x33	; 51
 710:	84 60       	ori	r24, 0x04	; 4
 712:	83 bf       	out	0x33, r24	; 51
	// 265 p_rescalier
	//FCPU 1Mhz
	//using normal mode
	double Ttick, TmaxDelay;
	uint16_t Noverflows,TInitial; 
	uint32_t overFlowcnt=0;
 714:	20 e0       	ldi	r18, 0x00	; 0
 716:	30 e0       	ldi	r19, 0x00	; 0
		Noverflows = ceil(delay_ms/TmaxDelay);
		TInitial = 256.0 - ((delay_ms/Ttick)/Noverflows);
	}
	TCNT0 = TInitial;
		TCCR0 |= (1<<2); //set 256 p_rescaling
		while(overFlowcnt<Noverflows){
 718:	08 c0       	rjmp	.+16     	; 0x72a <Timer0_N_delay_ms+0xee>
			while(READ_BIT(TIFR,0)==0);
 71a:	08 b6       	in	r0, 0x38	; 56
 71c:	00 fe       	sbrs	r0, 0
 71e:	fd cf       	rjmp	.-6      	; 0x71a <Timer0_N_delay_ms+0xde>
			SET_BIT(TIFR,0);
 720:	88 b7       	in	r24, 0x38	; 56
 722:	81 60       	ori	r24, 0x01	; 1
 724:	88 bf       	out	0x38, r24	; 56
			overFlowcnt++;
 726:	2f 5f       	subi	r18, 0xFF	; 255
 728:	3f 4f       	sbci	r19, 0xFF	; 255
		Noverflows = ceil(delay_ms/TmaxDelay);
		TInitial = 256.0 - ((delay_ms/Ttick)/Noverflows);
	}
	TCNT0 = TInitial;
		TCCR0 |= (1<<2); //set 256 p_rescaling
		while(overFlowcnt<Noverflows){
 72a:	2c 17       	cp	r18, r28
 72c:	3d 07       	cpc	r19, r29
 72e:	a8 f3       	brcs	.-22     	; 0x71a <Timer0_N_delay_ms+0xde>
			while(READ_BIT(TIFR,0)==0);
			SET_BIT(TIFR,0);
			overFlowcnt++;
		}
		TCCR0 = 0x00;
 730:	13 be       	out	0x33, r1	; 51
		TCNT0 = 0x00;
 732:	12 be       	out	0x32, r1	; 50
 734:	df 91       	pop	r29
 736:	cf 91       	pop	r28
 738:	ff 90       	pop	r15
 73a:	ef 90       	pop	r14
 73c:	df 90       	pop	r13
 73e:	cf 90       	pop	r12
 740:	bf 90       	pop	r11
 742:	af 90       	pop	r10
 744:	9f 90       	pop	r9
 746:	8f 90       	pop	r8
 748:	08 95       	ret

0000074a <__subsf3>:
 74a:	50 58       	subi	r21, 0x80	; 128

0000074c <__addsf3>:
 74c:	bb 27       	eor	r27, r27
 74e:	aa 27       	eor	r26, r26
 750:	0e 94 bd 03 	call	0x77a	; 0x77a <__addsf3x>
 754:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_round>
 758:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscA>
 75c:	38 f0       	brcs	.+14     	; 0x76c <__addsf3+0x20>
 75e:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscB>
 762:	20 f0       	brcs	.+8      	; 0x76c <__addsf3+0x20>
 764:	39 f4       	brne	.+14     	; 0x774 <__addsf3+0x28>
 766:	9f 3f       	cpi	r25, 0xFF	; 255
 768:	19 f4       	brne	.+6      	; 0x770 <__addsf3+0x24>
 76a:	26 f4       	brtc	.+8      	; 0x774 <__addsf3+0x28>
 76c:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_nan>
 770:	0e f4       	brtc	.+2      	; 0x774 <__addsf3+0x28>
 772:	e0 95       	com	r30
 774:	e7 fb       	bst	r30, 7
 776:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>

0000077a <__addsf3x>:
 77a:	e9 2f       	mov	r30, r25
 77c:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_split3>
 780:	58 f3       	brcs	.-42     	; 0x758 <__addsf3+0xc>
 782:	ba 17       	cp	r27, r26
 784:	62 07       	cpc	r22, r18
 786:	73 07       	cpc	r23, r19
 788:	84 07       	cpc	r24, r20
 78a:	95 07       	cpc	r25, r21
 78c:	20 f0       	brcs	.+8      	; 0x796 <__addsf3x+0x1c>
 78e:	79 f4       	brne	.+30     	; 0x7ae <__addsf3x+0x34>
 790:	a6 f5       	brtc	.+104    	; 0x7fa <__addsf3x+0x80>
 792:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_zero>
 796:	0e f4       	brtc	.+2      	; 0x79a <__addsf3x+0x20>
 798:	e0 95       	com	r30
 79a:	0b 2e       	mov	r0, r27
 79c:	ba 2f       	mov	r27, r26
 79e:	a0 2d       	mov	r26, r0
 7a0:	0b 01       	movw	r0, r22
 7a2:	b9 01       	movw	r22, r18
 7a4:	90 01       	movw	r18, r0
 7a6:	0c 01       	movw	r0, r24
 7a8:	ca 01       	movw	r24, r20
 7aa:	a0 01       	movw	r20, r0
 7ac:	11 24       	eor	r1, r1
 7ae:	ff 27       	eor	r31, r31
 7b0:	59 1b       	sub	r21, r25
 7b2:	99 f0       	breq	.+38     	; 0x7da <__addsf3x+0x60>
 7b4:	59 3f       	cpi	r21, 0xF9	; 249
 7b6:	50 f4       	brcc	.+20     	; 0x7cc <__addsf3x+0x52>
 7b8:	50 3e       	cpi	r21, 0xE0	; 224
 7ba:	68 f1       	brcs	.+90     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7bc:	1a 16       	cp	r1, r26
 7be:	f0 40       	sbci	r31, 0x00	; 0
 7c0:	a2 2f       	mov	r26, r18
 7c2:	23 2f       	mov	r18, r19
 7c4:	34 2f       	mov	r19, r20
 7c6:	44 27       	eor	r20, r20
 7c8:	58 5f       	subi	r21, 0xF8	; 248
 7ca:	f3 cf       	rjmp	.-26     	; 0x7b2 <__addsf3x+0x38>
 7cc:	46 95       	lsr	r20
 7ce:	37 95       	ror	r19
 7d0:	27 95       	ror	r18
 7d2:	a7 95       	ror	r26
 7d4:	f0 40       	sbci	r31, 0x00	; 0
 7d6:	53 95       	inc	r21
 7d8:	c9 f7       	brne	.-14     	; 0x7cc <__addsf3x+0x52>
 7da:	7e f4       	brtc	.+30     	; 0x7fa <__addsf3x+0x80>
 7dc:	1f 16       	cp	r1, r31
 7de:	ba 0b       	sbc	r27, r26
 7e0:	62 0b       	sbc	r22, r18
 7e2:	73 0b       	sbc	r23, r19
 7e4:	84 0b       	sbc	r24, r20
 7e6:	ba f0       	brmi	.+46     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7e8:	91 50       	subi	r25, 0x01	; 1
 7ea:	a1 f0       	breq	.+40     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 7ec:	ff 0f       	add	r31, r31
 7ee:	bb 1f       	adc	r27, r27
 7f0:	66 1f       	adc	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	c2 f7       	brpl	.-16     	; 0x7e8 <__addsf3x+0x6e>
 7f8:	0e c0       	rjmp	.+28     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7fa:	ba 0f       	add	r27, r26
 7fc:	62 1f       	adc	r22, r18
 7fe:	73 1f       	adc	r23, r19
 800:	84 1f       	adc	r24, r20
 802:	48 f4       	brcc	.+18     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 804:	87 95       	ror	r24
 806:	77 95       	ror	r23
 808:	67 95       	ror	r22
 80a:	b7 95       	ror	r27
 80c:	f7 95       	ror	r31
 80e:	9e 3f       	cpi	r25, 0xFE	; 254
 810:	08 f0       	brcs	.+2      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
 812:	b0 cf       	rjmp	.-160    	; 0x774 <__addsf3+0x28>
 814:	93 95       	inc	r25
 816:	88 0f       	add	r24, r24
 818:	08 f0       	brcs	.+2      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 81a:	99 27       	eor	r25, r25
 81c:	ee 0f       	add	r30, r30
 81e:	97 95       	ror	r25
 820:	87 95       	ror	r24
 822:	08 95       	ret

00000824 <ceil>:
 824:	0e 94 a3 05 	call	0xb46	; 0xb46 <__fp_trunc>
 828:	90 f0       	brcs	.+36     	; 0x84e <ceil+0x2a>
 82a:	9f 37       	cpi	r25, 0x7F	; 127
 82c:	48 f4       	brcc	.+18     	; 0x840 <ceil+0x1c>
 82e:	91 11       	cpse	r25, r1
 830:	16 f4       	brtc	.+4      	; 0x836 <ceil+0x12>
 832:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 836:	60 e0       	ldi	r22, 0x00	; 0
 838:	70 e0       	ldi	r23, 0x00	; 0
 83a:	80 e8       	ldi	r24, 0x80	; 128
 83c:	9f e3       	ldi	r25, 0x3F	; 63
 83e:	08 95       	ret
 840:	26 f0       	brts	.+8      	; 0x84a <ceil+0x26>
 842:	1b 16       	cp	r1, r27
 844:	61 1d       	adc	r22, r1
 846:	71 1d       	adc	r23, r1
 848:	81 1d       	adc	r24, r1
 84a:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__fp_mintl>
 84e:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__fp_mpack>

00000852 <__cmpsf2>:
 852:	0e 94 0c 05 	call	0xa18	; 0xa18 <__fp_cmp>
 856:	08 f4       	brcc	.+2      	; 0x85a <__cmpsf2+0x8>
 858:	81 e0       	ldi	r24, 0x01	; 1
 85a:	08 95       	ret

0000085c <__divsf3>:
 85c:	0e 94 42 04 	call	0x884	; 0x884 <__divsf3x>
 860:	0c 94 70 05 	jmp	0xae0	; 0xae0 <__fp_round>
 864:	0e 94 69 05 	call	0xad2	; 0xad2 <__fp_pscB>
 868:	58 f0       	brcs	.+22     	; 0x880 <__stack+0x21>
 86a:	0e 94 62 05 	call	0xac4	; 0xac4 <__fp_pscA>
 86e:	40 f0       	brcs	.+16     	; 0x880 <__stack+0x21>
 870:	29 f4       	brne	.+10     	; 0x87c <__stack+0x1d>
 872:	5f 3f       	cpi	r21, 0xFF	; 255
 874:	29 f0       	breq	.+10     	; 0x880 <__stack+0x21>
 876:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>
 87a:	51 11       	cpse	r21, r1
 87c:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 880:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__fp_nan>

00000884 <__divsf3x>:
 884:	0e 94 81 05 	call	0xb02	; 0xb02 <__fp_split3>
 888:	68 f3       	brcs	.-38     	; 0x864 <__stack+0x5>

0000088a <__divsf3_pse>:
 88a:	99 23       	and	r25, r25
 88c:	b1 f3       	breq	.-20     	; 0x87a <__stack+0x1b>
 88e:	55 23       	and	r21, r21
 890:	91 f3       	breq	.-28     	; 0x876 <__stack+0x17>
 892:	95 1b       	sub	r25, r21
 894:	55 0b       	sbc	r21, r21
 896:	bb 27       	eor	r27, r27
 898:	aa 27       	eor	r26, r26
 89a:	62 17       	cp	r22, r18
 89c:	73 07       	cpc	r23, r19
 89e:	84 07       	cpc	r24, r20
 8a0:	38 f0       	brcs	.+14     	; 0x8b0 <__divsf3_pse+0x26>
 8a2:	9f 5f       	subi	r25, 0xFF	; 255
 8a4:	5f 4f       	sbci	r21, 0xFF	; 255
 8a6:	22 0f       	add	r18, r18
 8a8:	33 1f       	adc	r19, r19
 8aa:	44 1f       	adc	r20, r20
 8ac:	aa 1f       	adc	r26, r26
 8ae:	a9 f3       	breq	.-22     	; 0x89a <__divsf3_pse+0x10>
 8b0:	35 d0       	rcall	.+106    	; 0x91c <__divsf3_pse+0x92>
 8b2:	0e 2e       	mov	r0, r30
 8b4:	3a f0       	brmi	.+14     	; 0x8c4 <__divsf3_pse+0x3a>
 8b6:	e0 e8       	ldi	r30, 0x80	; 128
 8b8:	32 d0       	rcall	.+100    	; 0x91e <__divsf3_pse+0x94>
 8ba:	91 50       	subi	r25, 0x01	; 1
 8bc:	50 40       	sbci	r21, 0x00	; 0
 8be:	e6 95       	lsr	r30
 8c0:	00 1c       	adc	r0, r0
 8c2:	ca f7       	brpl	.-14     	; 0x8b6 <__divsf3_pse+0x2c>
 8c4:	2b d0       	rcall	.+86     	; 0x91c <__divsf3_pse+0x92>
 8c6:	fe 2f       	mov	r31, r30
 8c8:	29 d0       	rcall	.+82     	; 0x91c <__divsf3_pse+0x92>
 8ca:	66 0f       	add	r22, r22
 8cc:	77 1f       	adc	r23, r23
 8ce:	88 1f       	adc	r24, r24
 8d0:	bb 1f       	adc	r27, r27
 8d2:	26 17       	cp	r18, r22
 8d4:	37 07       	cpc	r19, r23
 8d6:	48 07       	cpc	r20, r24
 8d8:	ab 07       	cpc	r26, r27
 8da:	b0 e8       	ldi	r27, 0x80	; 128
 8dc:	09 f0       	breq	.+2      	; 0x8e0 <__divsf3_pse+0x56>
 8de:	bb 0b       	sbc	r27, r27
 8e0:	80 2d       	mov	r24, r0
 8e2:	bf 01       	movw	r22, r30
 8e4:	ff 27       	eor	r31, r31
 8e6:	93 58       	subi	r25, 0x83	; 131
 8e8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ea:	3a f0       	brmi	.+14     	; 0x8fa <__divsf3_pse+0x70>
 8ec:	9e 3f       	cpi	r25, 0xFE	; 254
 8ee:	51 05       	cpc	r21, r1
 8f0:	78 f0       	brcs	.+30     	; 0x910 <__divsf3_pse+0x86>
 8f2:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_inf>
 8f6:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__fp_szero>
 8fa:	5f 3f       	cpi	r21, 0xFF	; 255
 8fc:	e4 f3       	brlt	.-8      	; 0x8f6 <__divsf3_pse+0x6c>
 8fe:	98 3e       	cpi	r25, 0xE8	; 232
 900:	d4 f3       	brlt	.-12     	; 0x8f6 <__divsf3_pse+0x6c>
 902:	86 95       	lsr	r24
 904:	77 95       	ror	r23
 906:	67 95       	ror	r22
 908:	b7 95       	ror	r27
 90a:	f7 95       	ror	r31
 90c:	9f 5f       	subi	r25, 0xFF	; 255
 90e:	c9 f7       	brne	.-14     	; 0x902 <__divsf3_pse+0x78>
 910:	88 0f       	add	r24, r24
 912:	91 1d       	adc	r25, r1
 914:	96 95       	lsr	r25
 916:	87 95       	ror	r24
 918:	97 f9       	bld	r25, 7
 91a:	08 95       	ret
 91c:	e1 e0       	ldi	r30, 0x01	; 1
 91e:	66 0f       	add	r22, r22
 920:	77 1f       	adc	r23, r23
 922:	88 1f       	adc	r24, r24
 924:	bb 1f       	adc	r27, r27
 926:	62 17       	cp	r22, r18
 928:	73 07       	cpc	r23, r19
 92a:	84 07       	cpc	r24, r20
 92c:	ba 07       	cpc	r27, r26
 92e:	20 f0       	brcs	.+8      	; 0x938 <__divsf3_pse+0xae>
 930:	62 1b       	sub	r22, r18
 932:	73 0b       	sbc	r23, r19
 934:	84 0b       	sbc	r24, r20
 936:	ba 0b       	sbc	r27, r26
 938:	ee 1f       	adc	r30, r30
 93a:	88 f7       	brcc	.-30     	; 0x91e <__divsf3_pse+0x94>
 93c:	e0 95       	com	r30
 93e:	08 95       	ret

00000940 <__fixunssfsi>:
 940:	0e 94 89 05 	call	0xb12	; 0xb12 <__fp_splitA>
 944:	88 f0       	brcs	.+34     	; 0x968 <__fixunssfsi+0x28>
 946:	9f 57       	subi	r25, 0x7F	; 127
 948:	98 f0       	brcs	.+38     	; 0x970 <__fixunssfsi+0x30>
 94a:	b9 2f       	mov	r27, r25
 94c:	99 27       	eor	r25, r25
 94e:	b7 51       	subi	r27, 0x17	; 23
 950:	b0 f0       	brcs	.+44     	; 0x97e <__fixunssfsi+0x3e>
 952:	e1 f0       	breq	.+56     	; 0x98c <__fixunssfsi+0x4c>
 954:	66 0f       	add	r22, r22
 956:	77 1f       	adc	r23, r23
 958:	88 1f       	adc	r24, r24
 95a:	99 1f       	adc	r25, r25
 95c:	1a f0       	brmi	.+6      	; 0x964 <__fixunssfsi+0x24>
 95e:	ba 95       	dec	r27
 960:	c9 f7       	brne	.-14     	; 0x954 <__fixunssfsi+0x14>
 962:	14 c0       	rjmp	.+40     	; 0x98c <__fixunssfsi+0x4c>
 964:	b1 30       	cpi	r27, 0x01	; 1
 966:	91 f0       	breq	.+36     	; 0x98c <__fixunssfsi+0x4c>
 968:	0e 94 bb 05 	call	0xb76	; 0xb76 <__fp_zero>
 96c:	b1 e0       	ldi	r27, 0x01	; 1
 96e:	08 95       	ret
 970:	0c 94 bb 05 	jmp	0xb76	; 0xb76 <__fp_zero>
 974:	67 2f       	mov	r22, r23
 976:	78 2f       	mov	r23, r24
 978:	88 27       	eor	r24, r24
 97a:	b8 5f       	subi	r27, 0xF8	; 248
 97c:	39 f0       	breq	.+14     	; 0x98c <__fixunssfsi+0x4c>
 97e:	b9 3f       	cpi	r27, 0xF9	; 249
 980:	cc f3       	brlt	.-14     	; 0x974 <__fixunssfsi+0x34>
 982:	86 95       	lsr	r24
 984:	77 95       	ror	r23
 986:	67 95       	ror	r22
 988:	b3 95       	inc	r27
 98a:	d9 f7       	brne	.-10     	; 0x982 <__fixunssfsi+0x42>
 98c:	3e f4       	brtc	.+14     	; 0x99c <__fixunssfsi+0x5c>
 98e:	90 95       	com	r25
 990:	80 95       	com	r24
 992:	70 95       	com	r23
 994:	61 95       	neg	r22
 996:	7f 4f       	sbci	r23, 0xFF	; 255
 998:	8f 4f       	sbci	r24, 0xFF	; 255
 99a:	9f 4f       	sbci	r25, 0xFF	; 255
 99c:	08 95       	ret

0000099e <__floatunsisf>:
 99e:	e8 94       	clt
 9a0:	09 c0       	rjmp	.+18     	; 0x9b4 <__floatsisf+0x12>

000009a2 <__floatsisf>:
 9a2:	97 fb       	bst	r25, 7
 9a4:	3e f4       	brtc	.+14     	; 0x9b4 <__floatsisf+0x12>
 9a6:	90 95       	com	r25
 9a8:	80 95       	com	r24
 9aa:	70 95       	com	r23
 9ac:	61 95       	neg	r22
 9ae:	7f 4f       	sbci	r23, 0xFF	; 255
 9b0:	8f 4f       	sbci	r24, 0xFF	; 255
 9b2:	9f 4f       	sbci	r25, 0xFF	; 255
 9b4:	99 23       	and	r25, r25
 9b6:	a9 f0       	breq	.+42     	; 0x9e2 <__floatsisf+0x40>
 9b8:	f9 2f       	mov	r31, r25
 9ba:	96 e9       	ldi	r25, 0x96	; 150
 9bc:	bb 27       	eor	r27, r27
 9be:	93 95       	inc	r25
 9c0:	f6 95       	lsr	r31
 9c2:	87 95       	ror	r24
 9c4:	77 95       	ror	r23
 9c6:	67 95       	ror	r22
 9c8:	b7 95       	ror	r27
 9ca:	f1 11       	cpse	r31, r1
 9cc:	f8 cf       	rjmp	.-16     	; 0x9be <__floatsisf+0x1c>
 9ce:	fa f4       	brpl	.+62     	; 0xa0e <__floatsisf+0x6c>
 9d0:	bb 0f       	add	r27, r27
 9d2:	11 f4       	brne	.+4      	; 0x9d8 <__floatsisf+0x36>
 9d4:	60 ff       	sbrs	r22, 0
 9d6:	1b c0       	rjmp	.+54     	; 0xa0e <__floatsisf+0x6c>
 9d8:	6f 5f       	subi	r22, 0xFF	; 255
 9da:	7f 4f       	sbci	r23, 0xFF	; 255
 9dc:	8f 4f       	sbci	r24, 0xFF	; 255
 9de:	9f 4f       	sbci	r25, 0xFF	; 255
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <__floatsisf+0x6c>
 9e2:	88 23       	and	r24, r24
 9e4:	11 f0       	breq	.+4      	; 0x9ea <__floatsisf+0x48>
 9e6:	96 e9       	ldi	r25, 0x96	; 150
 9e8:	11 c0       	rjmp	.+34     	; 0xa0c <__floatsisf+0x6a>
 9ea:	77 23       	and	r23, r23
 9ec:	21 f0       	breq	.+8      	; 0x9f6 <__floatsisf+0x54>
 9ee:	9e e8       	ldi	r25, 0x8E	; 142
 9f0:	87 2f       	mov	r24, r23
 9f2:	76 2f       	mov	r23, r22
 9f4:	05 c0       	rjmp	.+10     	; 0xa00 <__floatsisf+0x5e>
 9f6:	66 23       	and	r22, r22
 9f8:	71 f0       	breq	.+28     	; 0xa16 <__floatsisf+0x74>
 9fa:	96 e8       	ldi	r25, 0x86	; 134
 9fc:	86 2f       	mov	r24, r22
 9fe:	70 e0       	ldi	r23, 0x00	; 0
 a00:	60 e0       	ldi	r22, 0x00	; 0
 a02:	2a f0       	brmi	.+10     	; 0xa0e <__floatsisf+0x6c>
 a04:	9a 95       	dec	r25
 a06:	66 0f       	add	r22, r22
 a08:	77 1f       	adc	r23, r23
 a0a:	88 1f       	adc	r24, r24
 a0c:	da f7       	brpl	.-10     	; 0xa04 <__floatsisf+0x62>
 a0e:	88 0f       	add	r24, r24
 a10:	96 95       	lsr	r25
 a12:	87 95       	ror	r24
 a14:	97 f9       	bld	r25, 7
 a16:	08 95       	ret

00000a18 <__fp_cmp>:
 a18:	99 0f       	add	r25, r25
 a1a:	00 08       	sbc	r0, r0
 a1c:	55 0f       	add	r21, r21
 a1e:	aa 0b       	sbc	r26, r26
 a20:	e0 e8       	ldi	r30, 0x80	; 128
 a22:	fe ef       	ldi	r31, 0xFE	; 254
 a24:	16 16       	cp	r1, r22
 a26:	17 06       	cpc	r1, r23
 a28:	e8 07       	cpc	r30, r24
 a2a:	f9 07       	cpc	r31, r25
 a2c:	c0 f0       	brcs	.+48     	; 0xa5e <__fp_cmp+0x46>
 a2e:	12 16       	cp	r1, r18
 a30:	13 06       	cpc	r1, r19
 a32:	e4 07       	cpc	r30, r20
 a34:	f5 07       	cpc	r31, r21
 a36:	98 f0       	brcs	.+38     	; 0xa5e <__fp_cmp+0x46>
 a38:	62 1b       	sub	r22, r18
 a3a:	73 0b       	sbc	r23, r19
 a3c:	84 0b       	sbc	r24, r20
 a3e:	95 0b       	sbc	r25, r21
 a40:	39 f4       	brne	.+14     	; 0xa50 <__fp_cmp+0x38>
 a42:	0a 26       	eor	r0, r26
 a44:	61 f0       	breq	.+24     	; 0xa5e <__fp_cmp+0x46>
 a46:	23 2b       	or	r18, r19
 a48:	24 2b       	or	r18, r20
 a4a:	25 2b       	or	r18, r21
 a4c:	21 f4       	brne	.+8      	; 0xa56 <__fp_cmp+0x3e>
 a4e:	08 95       	ret
 a50:	0a 26       	eor	r0, r26
 a52:	09 f4       	brne	.+2      	; 0xa56 <__fp_cmp+0x3e>
 a54:	a1 40       	sbci	r26, 0x01	; 1
 a56:	a6 95       	lsr	r26
 a58:	8f ef       	ldi	r24, 0xFF	; 255
 a5a:	81 1d       	adc	r24, r1
 a5c:	81 1d       	adc	r24, r1
 a5e:	08 95       	ret

00000a60 <__fp_inf>:
 a60:	97 f9       	bld	r25, 7
 a62:	9f 67       	ori	r25, 0x7F	; 127
 a64:	80 e8       	ldi	r24, 0x80	; 128
 a66:	70 e0       	ldi	r23, 0x00	; 0
 a68:	60 e0       	ldi	r22, 0x00	; 0
 a6a:	08 95       	ret

00000a6c <__fp_mintl>:
 a6c:	88 23       	and	r24, r24
 a6e:	71 f4       	brne	.+28     	; 0xa8c <__fp_mintl+0x20>
 a70:	77 23       	and	r23, r23
 a72:	21 f0       	breq	.+8      	; 0xa7c <__fp_mintl+0x10>
 a74:	98 50       	subi	r25, 0x08	; 8
 a76:	87 2b       	or	r24, r23
 a78:	76 2f       	mov	r23, r22
 a7a:	07 c0       	rjmp	.+14     	; 0xa8a <__fp_mintl+0x1e>
 a7c:	66 23       	and	r22, r22
 a7e:	11 f4       	brne	.+4      	; 0xa84 <__fp_mintl+0x18>
 a80:	99 27       	eor	r25, r25
 a82:	0d c0       	rjmp	.+26     	; 0xa9e <__fp_mintl+0x32>
 a84:	90 51       	subi	r25, 0x10	; 16
 a86:	86 2b       	or	r24, r22
 a88:	70 e0       	ldi	r23, 0x00	; 0
 a8a:	60 e0       	ldi	r22, 0x00	; 0
 a8c:	2a f0       	brmi	.+10     	; 0xa98 <__fp_mintl+0x2c>
 a8e:	9a 95       	dec	r25
 a90:	66 0f       	add	r22, r22
 a92:	77 1f       	adc	r23, r23
 a94:	88 1f       	adc	r24, r24
 a96:	da f7       	brpl	.-10     	; 0xa8e <__fp_mintl+0x22>
 a98:	88 0f       	add	r24, r24
 a9a:	96 95       	lsr	r25
 a9c:	87 95       	ror	r24
 a9e:	97 f9       	bld	r25, 7
 aa0:	08 95       	ret

00000aa2 <__fp_mpack>:
 aa2:	9f 3f       	cpi	r25, 0xFF	; 255
 aa4:	31 f0       	breq	.+12     	; 0xab2 <__fp_mpack_finite+0xc>

00000aa6 <__fp_mpack_finite>:
 aa6:	91 50       	subi	r25, 0x01	; 1
 aa8:	20 f4       	brcc	.+8      	; 0xab2 <__fp_mpack_finite+0xc>
 aaa:	87 95       	ror	r24
 aac:	77 95       	ror	r23
 aae:	67 95       	ror	r22
 ab0:	b7 95       	ror	r27
 ab2:	88 0f       	add	r24, r24
 ab4:	91 1d       	adc	r25, r1
 ab6:	96 95       	lsr	r25
 ab8:	87 95       	ror	r24
 aba:	97 f9       	bld	r25, 7
 abc:	08 95       	ret

00000abe <__fp_nan>:
 abe:	9f ef       	ldi	r25, 0xFF	; 255
 ac0:	80 ec       	ldi	r24, 0xC0	; 192
 ac2:	08 95       	ret

00000ac4 <__fp_pscA>:
 ac4:	00 24       	eor	r0, r0
 ac6:	0a 94       	dec	r0
 ac8:	16 16       	cp	r1, r22
 aca:	17 06       	cpc	r1, r23
 acc:	18 06       	cpc	r1, r24
 ace:	09 06       	cpc	r0, r25
 ad0:	08 95       	ret

00000ad2 <__fp_pscB>:
 ad2:	00 24       	eor	r0, r0
 ad4:	0a 94       	dec	r0
 ad6:	12 16       	cp	r1, r18
 ad8:	13 06       	cpc	r1, r19
 ada:	14 06       	cpc	r1, r20
 adc:	05 06       	cpc	r0, r21
 ade:	08 95       	ret

00000ae0 <__fp_round>:
 ae0:	09 2e       	mov	r0, r25
 ae2:	03 94       	inc	r0
 ae4:	00 0c       	add	r0, r0
 ae6:	11 f4       	brne	.+4      	; 0xaec <__fp_round+0xc>
 ae8:	88 23       	and	r24, r24
 aea:	52 f0       	brmi	.+20     	; 0xb00 <__fp_round+0x20>
 aec:	bb 0f       	add	r27, r27
 aee:	40 f4       	brcc	.+16     	; 0xb00 <__fp_round+0x20>
 af0:	bf 2b       	or	r27, r31
 af2:	11 f4       	brne	.+4      	; 0xaf8 <__fp_round+0x18>
 af4:	60 ff       	sbrs	r22, 0
 af6:	04 c0       	rjmp	.+8      	; 0xb00 <__fp_round+0x20>
 af8:	6f 5f       	subi	r22, 0xFF	; 255
 afa:	7f 4f       	sbci	r23, 0xFF	; 255
 afc:	8f 4f       	sbci	r24, 0xFF	; 255
 afe:	9f 4f       	sbci	r25, 0xFF	; 255
 b00:	08 95       	ret

00000b02 <__fp_split3>:
 b02:	57 fd       	sbrc	r21, 7
 b04:	90 58       	subi	r25, 0x80	; 128
 b06:	44 0f       	add	r20, r20
 b08:	55 1f       	adc	r21, r21
 b0a:	59 f0       	breq	.+22     	; 0xb22 <__fp_splitA+0x10>
 b0c:	5f 3f       	cpi	r21, 0xFF	; 255
 b0e:	71 f0       	breq	.+28     	; 0xb2c <__fp_splitA+0x1a>
 b10:	47 95       	ror	r20

00000b12 <__fp_splitA>:
 b12:	88 0f       	add	r24, r24
 b14:	97 fb       	bst	r25, 7
 b16:	99 1f       	adc	r25, r25
 b18:	61 f0       	breq	.+24     	; 0xb32 <__fp_splitA+0x20>
 b1a:	9f 3f       	cpi	r25, 0xFF	; 255
 b1c:	79 f0       	breq	.+30     	; 0xb3c <__fp_splitA+0x2a>
 b1e:	87 95       	ror	r24
 b20:	08 95       	ret
 b22:	12 16       	cp	r1, r18
 b24:	13 06       	cpc	r1, r19
 b26:	14 06       	cpc	r1, r20
 b28:	55 1f       	adc	r21, r21
 b2a:	f2 cf       	rjmp	.-28     	; 0xb10 <__fp_split3+0xe>
 b2c:	46 95       	lsr	r20
 b2e:	f1 df       	rcall	.-30     	; 0xb12 <__fp_splitA>
 b30:	08 c0       	rjmp	.+16     	; 0xb42 <__fp_splitA+0x30>
 b32:	16 16       	cp	r1, r22
 b34:	17 06       	cpc	r1, r23
 b36:	18 06       	cpc	r1, r24
 b38:	99 1f       	adc	r25, r25
 b3a:	f1 cf       	rjmp	.-30     	; 0xb1e <__fp_splitA+0xc>
 b3c:	86 95       	lsr	r24
 b3e:	71 05       	cpc	r23, r1
 b40:	61 05       	cpc	r22, r1
 b42:	08 94       	sec
 b44:	08 95       	ret

00000b46 <__fp_trunc>:
 b46:	0e 94 89 05 	call	0xb12	; 0xb12 <__fp_splitA>
 b4a:	a0 f0       	brcs	.+40     	; 0xb74 <__fp_trunc+0x2e>
 b4c:	be e7       	ldi	r27, 0x7E	; 126
 b4e:	b9 17       	cp	r27, r25
 b50:	88 f4       	brcc	.+34     	; 0xb74 <__fp_trunc+0x2e>
 b52:	bb 27       	eor	r27, r27
 b54:	9f 38       	cpi	r25, 0x8F	; 143
 b56:	60 f4       	brcc	.+24     	; 0xb70 <__fp_trunc+0x2a>
 b58:	16 16       	cp	r1, r22
 b5a:	b1 1d       	adc	r27, r1
 b5c:	67 2f       	mov	r22, r23
 b5e:	78 2f       	mov	r23, r24
 b60:	88 27       	eor	r24, r24
 b62:	98 5f       	subi	r25, 0xF8	; 248
 b64:	f7 cf       	rjmp	.-18     	; 0xb54 <__fp_trunc+0xe>
 b66:	86 95       	lsr	r24
 b68:	77 95       	ror	r23
 b6a:	67 95       	ror	r22
 b6c:	b1 1d       	adc	r27, r1
 b6e:	93 95       	inc	r25
 b70:	96 39       	cpi	r25, 0x96	; 150
 b72:	c8 f3       	brcs	.-14     	; 0xb66 <__fp_trunc+0x20>
 b74:	08 95       	ret

00000b76 <__fp_zero>:
 b76:	e8 94       	clt

00000b78 <__fp_szero>:
 b78:	bb 27       	eor	r27, r27
 b7a:	66 27       	eor	r22, r22
 b7c:	77 27       	eor	r23, r23
 b7e:	cb 01       	movw	r24, r22
 b80:	97 f9       	bld	r25, 7
 b82:	08 95       	ret

00000b84 <_exit>:
 b84:	f8 94       	cli

00000b86 <__stop_program>:
 b86:	ff cf       	rjmp	.-2      	; 0xb86 <__stop_program>
